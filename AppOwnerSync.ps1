#Sync owners
# This script will consume the input file generated by the owner discrepancy script.
# The script validates the owner on each app reported and will sync the owners.

#update below.
. "D:\MyScrupts\MainFunctions.ps1"
Start-Transcript "D:\MyScripts\Logs\OWner-Sync-Logs$(get-date -f "dd-MM-yyyy").log"
$OD=ipcsv "D:\MyScripts\Reports\OwnerDescrepencyBasedOnOwnerCount.csv"

ConnectAzureAD
#Owner Discrepancy
foreach ($app in $OD){""
        write-host "Checking owners for app: $(($app).AppRegDisplayname)"
        if ([int]$app.AppRegOwnersCount -gt [int]$app.AppEntOwnersCount) 
            {
                Write-Host  "SP has less number of owners: Set service perinclple Owners." -ForegroundColor Cyan
                $app | ft AppRegDisplayname,AppRegOwnersCount,AppEntOwnersCount
                Write-Host "Validate the current owner count"                
                  try{                    
                    $arOwner=Get-AzureADApplicationOwner -ObjectId $app.AppRegObjectId -ErrorAction SilentlyContinue
                   } 
            catch {"Failed to fetch the Owner for $($app.AppRegObjectId)";$($Error[0].Exception)}
             try{
                    $spowner=Get-AzureADServicePrincipalOwner -ObjectId $app.AppEntObjectID -ErrorAction SilentlyContinue                    
                  } 
            catch {"Failed to fetch the Owner for $($app.AppEntObjectID)";$($Error[0].Exception)}
               
                write-host "Current count in AR:$(($arOwner).count) and in SP $(($spowner).count)"
                if ($spowner.Count -eq $arOwner.Count) {Write-host "Owners IN AR AND SP are IN SYNC" -ForegroundColor Green;""}
                else {
                        write-host "Validating the owner and fetching owner object id"                        
                        write-host "Owners in AR."
                        $arOwner.UserPrincipalName -join ";"
                        $arOwner.ObjectId -join ";"
                        write-host "Owners in SP."
                        $spowner.UserPrincipalName -join ";"
                        $spowner.ObjectId -join ";"
                        ""
                        $arOwner| % {
                                    Write-Host "Adding Owner: $($_.ObjectID) to SP:$($app.AppEntObjectID)"
                                    if ($spowner.ObjectId -contains $_.ObjectID) 
                                        {Write-Host "ObjectID already exist, skip action" -ForegroundColor Yellow} 
                                    else{Add-AzureADServicePrincipalOwner -ObjectId $app.AppEntObjectID -RefObjectId $_.ObjectID }              
                                    }
                }
            } 
       else { 
               Write-Host "AR has less number of owners: Set app registration Owner" -ForegroundColor Yellow
               $app |ft AppRegDisplayname,AppRegOwnersCount,AppEntOwnersCount               
               Write-Host "Validate the current owner count"
               try {                    
                    $arOwner=Get-AzureADApplicationOwner -ObjectId $app.AppRegObjectId -ErrorAction SilentlyContinue
                   } 
            catch {"Failed to fetch the Owner for $($app.AppRegObjectId)";$($Error[0].Exception)}
             try  {
                    $spowner=Get-AzureADServicePrincipalOwner -ObjectId $app.AppEntObjectID -ErrorAction SilentlyContinue                    
                  } 
            catch {"Failed to fetch the Owner for $($app.AppEntObjectID)";$($Error[0].Exception)}

               write-host "Current count in AR:$(($arOwner).count) and in SP $(($spowner).count)"
               if ($spowner.Count -eq $arOwner.Count) {Write-host "Owners IN AR AND SP are IN SYNC" -ForegroundColor Green;""}
               else {
               write-host "Owners in AR."
                        $arOwner.UserPrincipalName -join ";"
                        $arOwner.ObjectId -join ";"
                        write-host "Owners in SP."
                        $spowner.UserPrincipalName -join ";"
                        $spowner.ObjectId -join ";"
                        ""
                         $spOwner| % {
                                    Write-Host "Adding Owner: $($_.ObjectID) to AR:$($app.AppEntObjectID)"
                                    if ( $arOwner.ObjectId -contains $_.ObjectID) 
                                        { Write-Host "ObjectID already exist, skip action" -ForegroundColor Yellow} 
                                    else{Add-AzureADApplicationOwner -ObjectId $app.AppRegObjectId -RefObjectId $_.ObjectID }              
                                    }
                      } 
            }
}

Stop-Transcript
